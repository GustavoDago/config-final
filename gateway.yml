server:
  port: 8083

spring:
  application:
    name: gateway
  cloud:
    default-filters: # Filtro por defecto de todas las requests realizadas al gateway
      - name: LogFilter
  locator:
    enabled: true
  default-filters:
    - FilterCustom
  routes:
    - id: id-catalog-service
      uri: lb://catalog-service
      predicates:
        - Path=/api/v1/catalog/**


eureka:
  client:
    register-with-eureka: false
    fetchRegistry: true
    registry-fetch-interval-seconds: 5
    #SE QUITA SERVICE URL EUREKA PARA QUE NO SE REGISTRE (MAS ALLA DE COLOCAR EL   register-with-eureka EN VALOR false )
    service-url:
      defaultZone: http://localhost:8761/eureka
    #instance:
    #prefer-ip-address: true
      #instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
      #lease-renewal-interval-in-seconds: 5
      #lease-expiration-duration-in-seconds: 10
      #health-check-url-path: /actuator/health
  #server:
    #enable-self-preservation: false


#si fuera con puerto definido en la ruta de catalog y movies
#spring:
  #application:
    #name: gateway
    #cloud:
       #default-filters: #Filtro por defecto de todas las requests realizadas al gateway
        #- name: LogFilter
      #locator:
        #enabled: true
      #default-filters:
        #- FilterCustom
      #routes:
        #- id: productRoute #identificador de la ruta
          #uri: http://localhost:8082 #URL donde se hará el redirect según el predicado definido
          #predicates: #Reglas de análisis del request
           # - Path=/movies/** #path de URL de request a considerar
        #- id: userRoute #identificador de la ruta
          #uri: http://localhost:8081 
          #predicates: 
            #- Path=/catalog/** 
          #filters: 
            #- AddRequestHeader=user-request-header, custom-user-request-header
            #- AddResponseHeader=user-response-header, custom-user-response-header 
      


    
    
